using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace puzzledemo
{
    public partial class Form1 : Form
    {
        Button[,] btn;
        int n = 0;
        Boolean endgame;    
        int bx, by, bteg;

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {
            if (textBox1.Text != "") {
                n = Int32.Parse(textBox1.Text);
                int[] num = new  int[n*n];
                Random rand = new Random();
                for (int i=0;i<(n*n);i++) {
                    int a = rand.Next(1,(n*n)+1);
                    if (i == 0)
                    {
                        num[i] = a;
                    }
                    else {
                        bool f = true;
                        while (f) {
                            int ch = 0;
                            foreach (int c in num) {
                              
                                if (c == a) {
                                    a = rand.Next(1, (n * n) + 1);
                                    ch = 1;
                                }
                              
                            }
                            if (ch == 0)
                            {
                                f = false;
                                num[i] = a;
                            }
                        }
                    }
                }
                btn = new Button[n,n];
                int lox = 0;
                int loy = 0;
                int k = 0;
                endgame = false; 
                for (int i=0;i<n;i++)
                {
                    loy = loy + 100;
                    for (int j = 0; j < n; j++)
                    {
                        lox = lox + 100;
                        btn[i, j] = new Button();
                        btn[i, j].Width = 100;
                        btn[i, j].Height = 100;
                        btn[i, j].Location = new Point(lox,loy);
                        this.Controls.Add(btn[i, j]);
                        btn[i, j].Name = (k + 1).ToString();
                        if (num[k] == n * n)
                        {
                            btn[i, j].Text = "";
                            bx = i;
                            by = j;
                            bteg = k + 1;
                        }
                        else {
                            btn[i, j].Text = num[k].ToString();
                        }
                        btn[i, j].Click += new EventHandler(checksum);
                        k++;
                    }
                    lox = 0;
                }
            }
        }
        private void checksum(object sender , EventArgs e) {
            if (endgame == false) {
                int x = 0, y = 0, teg = 0;
                int btnadd = Int32.Parse((sender as Button).Name);
                for (int i=0;i<n;i++) {
                    for (int j=0;j<n;j++) { 
                        if(btn[i,j]==(sender as Button))
                        {
                            x = i;
                            y = j;
                            teg = btnadd;
                        }
                    }
                }
                
                
                if (btnadd - n == bteg || btnadd + n == bteg || (btnadd - 1 == bteg && bx == x) || (btnadd + 1 == bteg && bx == x))
                {
                    btn[bx, by].Text = (sender as Button).Text;
                    (sender as Button).Text = "";
                    bx = x;
                    by = y;
                    bteg = teg;
                    int cnt = 0;
                   
                    
                }
            }
        }
    }
}
